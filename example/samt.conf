# this is an example Thrax configuration file
# <- this symbol indicates a comment
# each line should be a key-value pair separated by whitespace

###
### GRAMMAR OPTIONS
###

grammar     samt    # or hiero
# default-nt    X   # X is the default anyway

# not only do these next six options have the suggested values as given
# in Chiang's "Hierarchical Phrase-based Translation" (CL), they are also
# Thrax's default values! You could comment them out and the resulting grammar
# would be identical.

initial-phrase-length   12  # maximum length of initial phrase pairs
rule-source-length      8   # maximum number of symbols on rule's source side
arity                   2   # maximum number of NTs in a rule
lexicality              0   # minimum number of aligned terminals in a rule
adjacent-nts    true   # allow adjacent nonterminals on source side
loose           true   # allow unaligned words at boundaries of phrases

features        phrase lex samt  # a whitespace seperated list of features
                                 # in this example, the features are phrase
                                 # translation probability
                                 # and lexical probability
                                 # and SAMT-style binary features

output-format   joshua  # the only option and default
                        # later we will want to add formats for other decoders
                        # such as moses and cdec, if they use other formats

label-feature-scores true   # label feature scores?
                            # each score will be output as name=score

###
### FILE OPTIONS
###

work-dir /tmp/thrax # where to hold intertmediate files on
                    # local disk
hadoop-work-dir file:///tmp/thrax/hadoop-work # where to hold files
                                              # such as job output
                                              # on the hadoop cluster

# you MUST set this option for Hadoop mode. In Java mode, it is not necessary,
# but if you want to use a single file for input, set unified-input to true.
input-file  example/nist09.unified.1
english-is-parsed   true
# the format should be:
# foreign sentence ||| english sentence ||| alignment
# where the english is either parsed or not depending on whether you want
# SAMT or you want Hiero.

output  example/nist09.ur-en.grammar.1      # 'stdout' or empty will
                                            # print to stdout.

gzip    false                       # gzip the output?

###
### JAVA MODE OPTIONS
###

threads     1       # number of threads of execution
queue-size  100     # size of sentence queue to hold in memory before blocking

# if your parallel corpus is in only one file, set this to true and put
# the file name as input-file
unified-input   false

# if unified-input is false, set these file paths
source      example/nist09.ur.1     # the source side of the corpus
# target    path/to/target/file     # plain-text target side (for Hiero)
parse       example/nist09.en.1             # parsed target side
alignment   example/nist09.alignments.1
# alignment-format    berkeley                # the only option and default

